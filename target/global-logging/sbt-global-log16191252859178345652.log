[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Amazon.com Inc. Java 11.0.23)
[debug] Load.defaultLoad until apply took 301.9032ms
[debug]           Load.loadUnit: plugins took 313.8298ms
[debug]           Load.loadUnit: defsScala took 0.8191ms
[debug] [Loading] Scanning directory E:\MovieRatingsProject\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\MovieRatingsProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 49.9333 ms
[debug]               Load.resolveProject(movieratingsproject-build) took 112.9013ms
[debug]             Load.loadTransitive: finalizeProject(Project(id movieratingsproject-build, base: E:\MovieRatingsProject\project, plugins: List(<none>))) took 235.5087ms
[debug] [Loading] Done in E:\MovieRatingsProject\project, returning: (movieratingsproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 299.2141ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.794ms
[debug]         Load.loadUnit(file:/E:/MovieRatingsProject/project/, ...) took 632.3082ms
[debug]       Load.apply: load took 988.9177ms
[debug]       Load.apply: resolveProjects took 16.9491ms
[debug]       Load.apply: finalTransforms took 186.3874ms
[debug]       Load.apply: config.delegates took 20.9117ms
[debug]       Load.apply: Def.make(settings)... took 1185.2229ms
[debug]       Load.apply: structureIndex took 262.2641ms
[debug]       Load.apply: mkStreams took 4.0418ms
[info] loading project definition from E:\MovieRatingsProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4871.1578ms
[debug]     Load.loadUnit: defsScala took 0.0092ms
[debug] [Loading] Scanning directory E:\MovieRatingsProject
[debug]       Load.loadUnit: mkEval took 13.3567ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.0216 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.7609ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\MovieRatingsProject, plugins: List(<none>))) took 11.5609ms
[debug] [Loading] Done in E:\MovieRatingsProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 6814.6105ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.1509ms
[debug]   Load.loadUnit(file:/E:/MovieRatingsProject/, ...) took 11707.7559ms
[debug] Load.apply: load took 11770.2017ms
[debug] Load.apply: resolveProjects took 0.2159ms
[debug] Load.apply: finalTransforms took 37.8842ms
[debug] Load.apply: config.delegates took 0.8894ms
[debug] Load.apply: Def.make(settings)... took 340.3069ms
[debug] Load.apply: structureIndex took 68.5112ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to MovieRatingsProject (in build file:/E:/MovieRatingsProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] 
[info] Here are some highlights of sbt 1.10.0:
[info]   - SIP-51 support for Scala 2.13 evolution
[info]   - Various Zinc fixes
[info]   - ConsistentAnalysisFormat: new Zinc Analysis serialization
[info]   - CommandProgress API
[info] See https://eed3si9n.com/sbt-1.10.0 for full release notes.
[info] Hide the banner for this release by running `skipBanner`.
[info] sbt server started at local:sbt-server-b08031ac999a0118a8f6
[debug] Writing bsp connection file
[info] started sbt server
