[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Amazon.com Inc. Java 11.0.23)
[debug] Load.defaultLoad until apply took 352.1918ms
[debug]           Load.loadUnit: plugins took 382.9323ms
[debug]           Load.loadUnit: defsScala took 4.6593ms
[debug] [Loading] Scanning directory E:\MovieRatingsProject\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\MovieRatingsProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 73.4222 ms
[debug]               Load.resolveProject(movieratingsproject-build) took 133.5289ms
[debug]             Load.loadTransitive: finalizeProject(Project(id movieratingsproject-build, base: E:\MovieRatingsProject\project, plugins: List(<none>))) took 251.6464ms
[debug] [Loading] Done in E:\MovieRatingsProject\project, returning: (movieratingsproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 296.2651ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.6457ms
[debug]         Load.loadUnit(file:/E:/MovieRatingsProject/project/, ...) took 702.6258ms
[debug]       Load.apply: load took 1153.8343ms
[debug]       Load.apply: resolveProjects took 15.6159ms
[debug]       Load.apply: finalTransforms took 167.0765ms
[debug]       Load.apply: config.delegates took 22.3ms
[debug]       Load.apply: Def.make(settings)... took 1228.2155ms
[debug]       Load.apply: structureIndex took 268.2965ms
[debug]       Load.apply: mkStreams took 3.5554ms
[info] loading project definition from E:\MovieRatingsProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5132.5738ms
[debug]     Load.loadUnit: defsScala took 0.0087ms
[debug] [Loading] Scanning directory E:\MovieRatingsProject
[debug]       Load.loadUnit: mkEval took 16.6906ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.2098 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 6.6436ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\MovieRatingsProject, plugins: List(<none>))) took 16.1395ms
[debug] [Loading] Done in E:\MovieRatingsProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 470.5342ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.5708ms
[debug]   Load.loadUnit(file:/E:/MovieRatingsProject/, ...) took 5631.0353ms
[debug] Load.apply: load took 5757.1149ms
[debug] Load.apply: resolveProjects took 0.273ms
[debug] Load.apply: finalTransforms took 31.7899ms
[debug] Load.apply: config.delegates took 1.1245ms
[debug] Load.apply: Def.make(settings)... took 251.2124ms
[debug] Load.apply: structureIndex took 65.621ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to MovieRatingsProject (in build file:/E:/MovieRatingsProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] 
[info] Here are some highlights of sbt 1.10.0:
[info]   - SIP-51 support for Scala 2.13 evolution
[info]   - Various Zinc fixes
[info]   - ConsistentAnalysisFormat: new Zinc Analysis serialization
[info]   - CommandProgress API
[info] See https://eed3si9n.com/sbt-1.10.0 for full release notes.
[info] Hide the banner for this release by running `skipBanner`.
[info] sbt server started at local:sbt-server-b08031ac999a0118a8f6
[debug] Writing bsp connection file
[info] started sbt server
